<?xml version="1.0" encoding="utf-8"?>
<topic id="632e5303-a1e0-492f-8f6a-8b78e9037c40" revisionNumber="1">
	<developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
		<introduction>
			<para>Fellow Oak DICOM, a DICOM toolkit in C# for .NET Framework, .NET Core, Universal Windows, Android, iOS, Mono and Unity.</para>
		</introduction>

		<section>
			<title>Main features</title>
			<content>
				<list class="bullet">
					<listItem>
						<para>Portable Class Library (PCL)</para>
					</listItem>
					<listItem>
						<para>
              Targets .NET 4.5.2 and higher, .NET Core (.NET Standard 1.3 and higher), Universal Windows Platform, Xamarin iOS, Xamarin Android, Mono and Unity
            </para>
					</listItem>
					<listItem>
						<para>
              DICOM dictionary version 2016e
            </para>
					</listItem>
					<listItem>
						<para>
              High-performance, fully asynchronous <codeInline>async</codeInline>/<codeInline>await</codeInline> API
            </para>
					</listItem>
          <listItem>
            <para>
              JPEG (including lossless), JPEG-LS, JPEG2000, and RLE image compression (limited on .NET Core, Xamarin, Mono and Unity platforms)
            </para>
          </listItem>
          <listItem>
            <para>
              Supports very large datasets with content loading on demand
            </para>
          </listItem>
          <listItem>
            <para>
              Platform-specific image rendering
            </para>
          </listItem>
          <listItem>
            <para>
              JSON import and export
            </para>
          </listItem>
          <listItem>
            <para>XML export</para>
          </listItem>
          <listItem>
            <para>Anonymization</para>
          </listItem>
        </list>
			</content>
		</section>

    <section>
      <title>Installation</title>
      <content>
        <para>Easiest is to obtain fo-dicom binaries from NuGet. The 
        <externalLink>
          <linkText>fo-dicom</linkText>
          <linkUri>https://www.nuget.org/packages/fo-dicom/</linkUri>
        </externalLink>
          package reference the core fo-dicom assemblies for all Microsoft and Xamarin platforms.</para>
      </content>
    </section>

    <section>
      <title>NuGet packages</title>
      <content>
        <table>
          <tableHeader>
            <row>
              <entry>
                <para>Package</para>
              </entry>
              <entry>
                <para>Description</para>
              </entry>
            </row>
          </tableHeader>
          <row>
            <entry>
              <para>
                <externalLink>
                  <linkText>fo-dicom</linkText>
                  <linkUri>https://www.nuget.org/packages/fo-dicom/</linkUri>
                </externalLink>
              </para>
            </entry>
            <entry>
              <para>Dependencies package including core libraries for Microsoft and Xamarin platforms</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>
                <externalLink>
                  <linkText>fo-dicom.Portable</linkText>
                  <linkUri>https://www.nuget.org/packages/fo-dicom.Portable/</linkUri>
                </externalLink>
              </para>
            </entry>
            <entry>
              <para>Core library for PCL Profile 111</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>
                <externalLink>
                  <linkText>fo-dicom.Desktop</linkText>
                  <linkUri>https://www.nuget.org/packages/fo-dicom.Desktop/</linkUri>
                </externalLink>
              </para>
            </entry>
            <entry>
              <para>Core library and native codec libraries for .NET 4.5.2 and higher</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>
                <externalLink>
                  <linkText>fo-dicom.NetCore</linkText>
                  <linkUri>https://www.nuget.org/packages/fo-dicom.NetCore/</linkUri>
                </externalLink>
              </para>
            </entry>
            <entry>
              <para>Core library for .NET Core applications, .NET Standard 1.3 and higher</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>
                <externalLink>
                  <linkText>fo-dicom.Universal</linkText>
                  <linkUri>https://www.nuget.org/packages/fo-dicom.Universal/</linkUri>
                </externalLink>
              </para>
            </entry>
            <entry>
              <para>Core library and native codec libraries for Universal Windows Platform, UWP</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>
                <externalLink>
                  <linkText>fo-dicom.Android</linkText>
                  <linkUri>https://www.nuget.org/packages/fo-dicom.Android/</linkUri>
                </externalLink>
              </para>
            </entry>
            <entry>
              <para>Core library for Xamarin Android</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>
                <externalLink>
                  <linkText>fo-dicom.iOS</linkText>
                  <linkUri>https://www.nuget.org/packages/fo-dicom.iOS/</linkUri>
                </externalLink>
              </para>
            </entry>
            <entry>
              <para>Core library for Xamarin iOS (Unified)</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>
                <externalLink>
                  <linkText>fo-dicom.log4net</linkText>
                  <linkUri>https://www.nuget.org/packages/fo-dicom.log4net/</linkUri>
                </externalLink>
              </para>
            </entry>
            <entry>
              <para>.NET connector to enable fo-dicom logging with log4net</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>
                <externalLink>
                  <linkText>fo-dicom.MetroLog</linkText>
                  <linkUri>https://www.nuget.org/packages/fo-dicom.MetroLog/</linkUri>
                </externalLink>
              </para>
            </entry>
            <entry>
              <para>PCL Profile 111 connector to enable fo-dicom logging with MetroLog</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>
                <externalLink>
                  <linkText>fo-dicom.NLog</linkText>
                  <linkUri>https://www.nuget.org/packages/fo-dicom.NLog/</linkUri>
                </externalLink>
              </para>
            </entry>
            <entry>
              <para>.NET connector to enable fo-dicom logging with NLog</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>
                <externalLink>
                  <linkText>fo-dicom.Serilog</linkText>
                  <linkUri>https://www.nuget.org/packages/fo-dicom.Serilog/</linkUri>
                </externalLink>
              </para>
            </entry>
            <entry>
              <para>.NET connector to enable fo-dicom logging with Serilog</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>
                <externalLink>
                  <linkText>fo-dicom.Json</linkText>
                  <linkUri>https://www.nuget.org/packages/fo-dicom.Json/</linkUri>
                </externalLink>
              </para>
            </entry>
            <entry>
              <para>PCL profile 111 library for JSON I/O support</para>
            </entry>
          </row>
          <row>
            <entry>
              <para>
                <externalLink>
                  <linkText>fo-dicom.Legacy</linkText>
                  <linkUri>https://www.nuget.org/packages/fo-dicom.Legacy/</linkUri>
                </externalLink>
              </para>
            </entry>
            <entry>
              <para>PCL profile 111 library with obsolete asynchronous methods (to be deprecated in 4.0)</para>
            </entry>
          </row>
        </table>
      </content>
    </section>

    <section>
      <title>Usage notes</title>
      <content>
        <para>
          <legacyBold>
            Image rendering configuration
          </legacyBold>
        </para>
        <para>
          Out-of-the-box, fo-dicom for .NET defaults to Windows Forms-style image rendering. To switch to WPF-style image rendering, call:
          <command>ImageManager.SetImplementation(WPFImageManager.Instance);</command>
        </para>
        <para>
          <legacyBold>
            Logging configuration
          </legacyBold>
        </para>
        <para>
          By default, logging defaults to the no-op <codeInline>NullLogerManager</codeInline>. On .NET, several log managers are available and can be enabled like this:
        </para>
        <para>
          <command>
            LogManager.SetImplementation(ConsoleLogManager.Instance);  // or ...
          </command>
        </para>
        <para>
          <command>
            LogManager.SetImplementation(NLogManager.Instance);        // or ...
          </command>
        </para>
        <para>
          On Universal Windows Platform, Xamarin iOS, Xamarin Android and Mono there is only one operational log manager available, namely <codeInline>MetroLogManager.Instance</codeInline>.
        </para>
        <para>
          <legacyBold>
            Cross-platform development
          </legacyBold>
        </para>
        <para>
          To facilitate cross-platform development, the core library is strong name signed and denoted <application>Dicom.Core.dll</application> on all platforms.
          From an assembly reference point-of-view this convention makes the core assemblies mutually replaceable. It is thus possible to develop a Portable Class Library
          that depends on the PCL <application>Dicom.Core</application> assembly, and when the developed Portable Class Library is used in a platform-specific application,
          the PCL <application>Dicom.Core</application> assembly can be replaced with the platform-specific <application>Dicom.Core</application> assembly without needing to re-build anything.
          <application>fo-dicom.Json</application> and <application>fo-dicom.MetroLog</application> are examples of portable class libraries that depend on the PCL
          <application>Dicom.Core.dll</application>.
        </para>
        <para>
          The assembly naming convention is often referred to as the bait-and-switch trick. The fo-dicom package supports the bait-and-switch trick by automatically selecting 
          the best suited Dicom.Core assembly depending on the targeted platform of the development project upon download from NuGet.
        </para>
        <para>
          <legacyBold>
            Important notice for Universal Windows Platform applications
          </legacyBold>
        </para>
        <para>
          The fo-dicom class library is not fully Windows Runtime compatible, and therefore cannot be built with the .NET Native tool chain enabled in Universal Windows Platform applications.
          Typically, the <system>Compile with .NET Native tool chain</system> checkbox is checked in Release mode for UWP applications. To enable building the application in Release mode, 
          uncheck this checkbox.
        </para>
      </content>
    </section>

    <section>
      <title>Sample applications</title>
      <content>
        <para>
          There are a number of simple sample applications that use fo-dicom available in separate repository 
          <externalLink>
            <linkText>here</linkText>
            <linkUri>https://github.com/fo-dicom/fo-dicom-samples</linkUri>
          </externalLink>
          . These also include the samples that were previously included in the Examples sub-folder of the VS solutions.
        </para>
      </content>
    </section>
		<relatedTopics>
			<link xlink:href="210bead1-281e-424a-b1a0-42f23b9bd302" />
		</relatedTopics>
	</developerConceptualDocument>
</topic>
