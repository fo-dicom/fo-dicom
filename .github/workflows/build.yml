name: build

on:
  push:
    branches:
    - development
  pull_request:
    branches:
    - development

jobs:
  v4-net-framework:
    runs-on: windows-2019
    steps:
      - name: Install Windows 8.1 SDK
        shell: powershell
        run: |
          Invoke-WebRequest -Method Get -Uri https://go.microsoft.com/fwlink/p/?LinkId=323507 -OutFile sdksetup.exe -UseBasicParsing
          Start-Process -Wait sdksetup.exe -ArgumentList "/q", "/norestart", "/features", "OptionId.WindowsDesktopSoftwareDevelopmentKit", "OptionId.NetFxSoftwareDevelopmentKit"
      - uses: actions/checkout@v2
      - name: Setup NuGet
        uses: nuget/setup-nuget@v1
      - name: Setup MSBuild
        uses: microsoft/Setup-MSBuild@v1
      - name: Restore nuget packages
        run: nuget restore DICOM.Desktop.sln
      - name: Build Desktop platform
        run: msbuild DICOM.Desktop.sln -target:"Platform\DICOM_Desktop" -p:Configuration=Release -p:Platform="Any CPU" -maxCpuCount
      - name: Build tests for Desktop platform
        run: msbuild DICOM.Desktop.sln -target:"Unit Tests\DICOM_Tests_Desktop" -p:Configuration=Release -p:Platform="Any CPU" -maxCpuCount
      - name: Run tests for Desktop platform
        run: ./packages/xunit.runner.console.2.4.1/tools/net472/xunit.console.exe "Tests\Desktop\bin\Release\DICOM [Unit Tests].dll" -xml test-v4-net-framework.xml
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-v4-net-framework.xml
          path: test-v4-net-framework.xml

  v4-net-core-21:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - name: Setup NuGet
        uses: nuget/setup-nuget@v1
      - name: Setup MSBuild
        uses: microsoft/Setup-MSBuild@v1
      - name: Restore nuget packages using NuGet CLI
        run: nuget restore DICOM.Full.sln
      - name: Restore DICOM.NetCore nuget packages using dotnet CLI
        run: dotnet restore ./Platform/NetCore/DICOM.NetCore.csproj
      - name: Build Dicom.NetCore
        run: msbuild DICOM.Full.sln -target:"Platform\DICOM_NetCore" -p:Configuration=Release -p:Platform="Any CPU" -maxCpuCount
      - name: Restore DICOM.Tests.NetCore nuget packages using dotnet CLI
        run: dotnet restore ./Tests/NetCore/DICOM.Tests.NetCore.csproj
      - name: Build Dicom.Tests.NetCore
        run: msbuild DICOM.Full.sln -target:"Unit Tests\DICOM_Tests_NetCore" -p:Configuration=Release -p:Platform="Any CPU" -maxCpuCount
      - name: Run Dicom.Tests.NetCore
        run: dotnet test ./Tests/NetCore/DICOM.Tests.NetCore.csproj --configuration Release --framework netcoreapp2.0
 
  v5-net-framework:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - name: Build FO-DICOM.Core
      run: dotnet build ./FO-DICOM.Core/FO-DICOM.Core.csproj --configuration Release --runtime win-x64
    - name: Test FO-DICOM.Tests
      run: dotnet test ./Tests/FO-DICOM.Tests/FO-DICOM.Tests.csproj --configuration Release --framework net462 --runtime win-x64 --logger:"trx;LogFileName=.\resultsnet462.xml"
    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
          name: test-v5-net-framework.xml
          path: ./Tests/FO-DICOM.Tests/TestResults/resultsnet462.xml
      
  v5-net-core-21:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - name: Build FO-DICOM.Core
      run: dotnet build ./FO-DICOM.Core/FO-DICOM.Core.csproj --configuration Release --framework netstandard2.0 --runtime win-x64
    - name: Test FO-DICOM.Tests
      run: dotnet test ./Tests/FO-DICOM.Tests/FO-DICOM.Tests.csproj --configuration Release --framework netcoreapp2.1 --blame --runtime win-x64 --logger:"trx;LogFileName=.\resultsnetcore21.xml"
    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
          name: test-v5-net-core-21.xml
          path: ./Tests/FO-DICOM.Tests/TestResults/resultsnetcore21.xml
      
  v5-net-core-31:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - name: Build FO-DICOM.Core
      run: dotnet build ./FO-DICOM.Core/FO-DICOM.Core.csproj --configuration Release --runtime win-x64
    - name: Test FO-DICOM.Tests
      run: dotnet test ./Tests/FO-DICOM.Tests/FO-DICOM.Tests.csproj --configuration Release --framework netcoreapp3.1 --blame --runtime win-x64 --logger:"trx;LogFileName=.\resultsnetcore31.xml" --collect:"XPlat Code Coverage" --settings coverlet.runsettings
    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
          name: test-v5-net-core-31.xml
          path: ./Tests/FO-DICOM.Tests/TestResults/resultsnetcore31.xml
    - name: Upload code coverage 
      uses: codecov/codecov-action@v2

  benchmarks:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - name: Build FO-DICOM..Benchmark
      run: dotnet build ./Tests/FO-DICOM.Benchmark/FO-DICOM.Benchmark.csproj --configuration Release --framework netcoreapp3.1
    - name: run benchmarks
      run: ./Tests/FO-DICOM.Benchmark/bin/Release/netcoreapp3.1/fo-dicom.Benchmark.exe
    - name: Upload benchmark log
      uses: actions/upload-artifact@v2
      with:
        name: benchmark
        path: |
          ./BenchmarkDotNet.Artifacts/
          ./BenchmarkDotNet.Artifacts/results/
 

